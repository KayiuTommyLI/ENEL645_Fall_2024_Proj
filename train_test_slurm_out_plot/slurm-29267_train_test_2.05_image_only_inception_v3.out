[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-23 15:44:17 - INFO - Using device: cuda
[2024-11-23 15:44:17] 
Configuration:
[2024-11-23 15:44:17] Mode: train
[2024-11-23 15:44:17] Modality: image_only
[2024-11-23 15:44:17] 
Model Settings:
[2024-11-23 15:44:17] - Number of classes: 4
[2024-11-23 15:44:17] - Text model: distilbert-base-uncased
[2024-11-23 15:44:17] - Image model: inception_v3
[2024-11-23 15:44:17] - Hidden sizes: [256]
[2024-11-23 15:44:17] - Use text: False
[2024-11-23 15:44:17] - Use image: True
[2024-11-23 15:44:17] - Use caption: False
[2024-11-23 15:44:17] - Caption mode: CaptionMode.NONE
[2024-11-23 15:44:17] - Use garbage feature: False
[2024-11-23 15:44:17] - Use similarity: False
[2024-11-23 15:44:17] 
Training Settings:
[2024-11-23 15:44:17] - Batch size: 24
[2024-11-23 15:44:17] - Learning rate: 1e-05
[2024-11-23 15:44:17] - Number of epochs: 50
[2024-11-23 15:44:17] - Max sequence length: 300
[2024-11-23 15:44:17] - Dropout rate: 0.3
[2024-11-23 15:44:17] - Early stopping patience: 5
[2024-11-23 15:44:17] - Weight decay: 0.01
[2024-11-23 15:44:17] - Label smoothing: 0.0
[2024-11-23 15:44:17] 
2024-11-23 15:44:17 - INFO - Initialized distilbert-base-uncased tokenizer
Downloading: "https://download.pytorch.org/models/inception_v3_google-0cc3c7bd.pth" to /home/jeffrey.wong1/.cache/torch/hub/checkpoints/inception_v3_google-0cc3c7bd.pth
[2024-11-23 15:44:17] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-23 15:44:17] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-23 15:44:17] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
  0%|          | 0.00/104M [00:00<?, ?B/s]  4%|▍         | 4.12M/104M [00:00<00:02, 43.2MB/s]  9%|▉         | 9.12M/104M [00:00<00:02, 48.2MB/s] 15%|█▌        | 15.6M/104M [00:00<00:01, 56.9MB/s] 23%|██▎       | 23.9M/104M [00:00<00:01, 67.9MB/s] 33%|███▎      | 34.0M/104M [00:00<00:00, 81.5MB/s] 43%|████▎     | 44.4M/104M [00:00<00:00, 90.6MB/s] 54%|█████▎    | 55.6M/104M [00:00<00:00, 99.1MB/s] 64%|██████▍   | 66.9M/104M [00:00<00:00, 105MB/s]  75%|███████▌  | 78.0M/104M [00:00<00:00, 109MB/s] 86%|████████▌ | 89.2M/104M [00:01<00:00, 111MB/s] 97%|█████████▋| 100M/104M [00:01<00:00, 113MB/s] 100%|██████████| 104M/104M [00:01<00:00, 95.6MB/s]
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:360: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-23 15:44:21] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-23 15:59:50] Epoch 1/50 - Train Loss: 1.0547 - Val Loss: 0.7740 - Val Acc: 0.7078
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 15:59:51] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-23 16:15:10] Epoch 2/50 - Train Loss: 0.6792 - Val Loss: 0.6562 - Val Acc: 0.7483
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 16:15:11] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-23 16:30:30] Epoch 3/50 - Train Loss: 0.5279 - Val Loss: 0.6175 - Val Acc: 0.7694
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 16:30:31] Save best_model.pt for Loss at epochs 3 
Model mode: False
[2024-11-23 16:45:50] Epoch 4/50 - Train Loss: 0.3998 - Val Loss: 0.6211 - Val Acc: 0.7633
Model mode: False
[2024-11-23 17:01:07] Epoch 5/50 - Train Loss: 0.3269 - Val Loss: 0.6424 - Val Acc: 0.7678
Model mode: False
[2024-11-23 17:16:23] Epoch 6/50 - Train Loss: 0.2407 - Val Loss: 0.6790 - Val Acc: 0.7722
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 17:16:25] Save best_model.pt for Accuracy at epochs 6 
Model mode: False
[2024-11-23 17:31:45] Epoch 7/50 - Train Loss: 0.1892 - Val Loss: 0.6587 - Val Acc: 0.7817
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 17:31:46] Save best_model.pt for Accuracy at epochs 7 
Model mode: False
[2024-11-23 17:47:10] Epoch 8/50 - Train Loss: 0.1507 - Val Loss: 0.7091 - Val Acc: 0.7728
Model mode: False
[2024-11-23 18:02:30] Learning rate updated to: 1.0000000000000002e-06
[2024-11-23 18:02:30] Epoch 9/50 - Train Loss: 0.1187 - Val Loss: 0.7359 - Val Acc: 0.7828
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 18:02:31] Save best_model.pt for Accuracy at epochs 9 
Model mode: False
[2024-11-23 18:17:51] Epoch 10/50 - Train Loss: 0.1025 - Val Loss: 0.7325 - Val Acc: 0.7817
Model mode: False
[2024-11-23 18:33:14] Epoch 11/50 - Train Loss: 0.0840 - Val Loss: 0.7436 - Val Acc: 0.7728
Model mode: False
[2024-11-23 18:48:36] Epoch 12/50 - Train Loss: 0.0942 - Val Loss: 0.7390 - Val Acc: 0.7833
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 18:48:37] Save best_model.pt for Accuracy at epochs 12 
Model mode: False
[2024-11-23 19:03:58] Epoch 13/50 - Train Loss: 0.0811 - Val Loss: 0.7477 - Val Acc: 0.7800
Model mode: False
[2024-11-23 19:19:19] Epoch 14/50 - Train Loss: 0.0816 - Val Loss: 0.7427 - Val Acc: 0.7756
Model mode: False
[2024-11-23 19:34:41] Learning rate updated to: 1.0000000000000002e-07
[2024-11-23 19:34:41] Epoch 15/50 - Train Loss: 0.0716 - Val Loss: 0.7647 - Val Acc: 0.7844
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 19:34:43] Save best_model.pt for Accuracy at epochs 15 
Model mode: False
[2024-11-23 19:50:03] Epoch 16/50 - Train Loss: 0.0729 - Val Loss: 0.7645 - Val Acc: 0.7822
Model mode: False
[2024-11-23 20:05:28] Epoch 17/50 - Train Loss: 0.0727 - Val Loss: 0.7551 - Val Acc: 0.7811
Model mode: False
[2024-11-23 20:20:50] Epoch 18/50 - Train Loss: 0.0712 - Val Loss: 0.7618 - Val Acc: 0.7778
Model mode: False
[2024-11-23 20:36:10] Epoch 19/50 - Train Loss: 0.0710 - Val Loss: 0.7692 - Val Acc: 0.7817
Model mode: False
[2024-11-23 20:51:32] Epoch 20/50 - Train Loss: 0.0686 - Val Loss: 0.7540 - Val Acc: 0.7783
[2024-11-23 20:51:32] Early stopping triggered after epochs 20 
[2024-11-23 20:51:33] Loading best model from Phase 1
[2024-11-23 20:51:38] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model exists: True
Text model trainable: True
Image model exists: True
Image model trainable: True
Model mode: False
[2024-11-23 21:07:01] Epoch 1/50 - Train Loss: 0.0726 - Val Loss: 0.7822 - Val Acc: 0.7789
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 21:07:02] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-23 21:22:25] Epoch 2/50 - Train Loss: 0.0646 - Val Loss: 0.7606 - Val Acc: 0.7783
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 21:22:26] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-23 21:37:50] Epoch 3/50 - Train Loss: 0.0670 - Val Loss: 0.7706 - Val Acc: 0.7750
Model mode: False
[2024-11-23 21:53:15] Epoch 4/50 - Train Loss: 0.0627 - Val Loss: 0.7749 - Val Acc: 0.7761
Model mode: False
[2024-11-23 22:08:38] Epoch 5/50 - Train Loss: 0.0622 - Val Loss: 0.8025 - Val Acc: 0.7778
Model mode: False
[2024-11-23 22:23:58] Epoch 6/50 - Train Loss: 0.0550 - Val Loss: 0.7943 - Val Acc: 0.7772
Model mode: False
[2024-11-23 22:39:22] Epoch 7/50 - Train Loss: 0.0509 - Val Loss: 0.7861 - Val Acc: 0.7739
[2024-11-23 22:39:22] Early stopping triggered after epochs 7 
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-23 22:39:38 - INFO - Using device: cuda
[2024-11-23 22:39:38] 
Configuration:
[2024-11-23 22:39:38] Mode: test
[2024-11-23 22:39:38] Modality: image_only
[2024-11-23 22:39:38] 
Model Settings:
[2024-11-23 22:39:38] - Number of classes: 4
[2024-11-23 22:39:38] - Text model: distilbert-base-uncased
[2024-11-23 22:39:38] - Image model: inception_v3
[2024-11-23 22:39:38] - Hidden sizes: [256]
[2024-11-23 22:39:38] - Use text: False
[2024-11-23 22:39:38] - Use image: True
[2024-11-23 22:39:38] - Use caption: False
[2024-11-23 22:39:38] - Caption mode: CaptionMode.NONE
[2024-11-23 22:39:38] - Use garbage feature: False
[2024-11-23 22:39:38] - Use similarity: False
[2024-11-23 22:39:38] 
Training Settings:
[2024-11-23 22:39:38] - Batch size: 24
[2024-11-23 22:39:38] - Learning rate: 1e-05
[2024-11-23 22:39:38] - Number of epochs: 50
[2024-11-23 22:39:38] - Max sequence length: 300
[2024-11-23 22:39:38] - Dropout rate: 0.3
[2024-11-23 22:39:38] - Early stopping patience: 5
[2024-11-23 22:39:38] - Weight decay: 0.01
[2024-11-23 22:39:38] - Label smoothing: 0.0
[2024-11-23 22:39:38] 
2024-11-23 22:39:38 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:439: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-23 22:39:38] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-23 22:39:38] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-23 22:39:38] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
Model mode: False
test_results['accuracy'] 0.721364033809385
test_results['precision'] 0.7275415307169004
test_results['recall'] 0.721364033809385
test_results['f1'] 0.7217670396516056
test_results['loss'] 0.9673389958126561

Confusion Matrix:
--------------------------------------------------
[[406 166  29  94]
 [111 871  29  74]
 [ 71  64 647  17]
 [114 162  25 551]]
Classification results saved to test_classification_results.json
