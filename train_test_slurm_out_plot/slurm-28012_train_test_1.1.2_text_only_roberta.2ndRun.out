[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-19 16:55:38 - INFO - Using device: cuda
[2024-11-19 16:55:38] 
Configuration:
[2024-11-19 16:55:38] Mode: train
[2024-11-19 16:55:38] Modality: text_only
[2024-11-19 16:55:38] 
Model Settings:
[2024-11-19 16:55:38] - Number of classes: 4
[2024-11-19 16:55:38] - Text model: roberta-base
[2024-11-19 16:55:38] - Image model: resnet18
[2024-11-19 16:55:38] - Hidden sizes: [256]
[2024-11-19 16:55:38] - Use text: True
[2024-11-19 16:55:38] - Use image: False
[2024-11-19 16:55:38] - Use caption: False
[2024-11-19 16:55:38] - Caption mode: CaptionMode.NONE
[2024-11-19 16:55:38] - Use garbage feature: False
[2024-11-19 16:55:38] - Use similarity: False
[2024-11-19 16:55:38] 
Training Settings:
[2024-11-19 16:55:38] - Batch size: 24
[2024-11-19 16:55:38] - Learning rate: 1e-05
[2024-11-19 16:55:38] - Number of epochs: 50
[2024-11-19 16:55:38] - Max sequence length: 300
[2024-11-19 16:55:38] - Dropout rate: 0.3
[2024-11-19 16:55:38] - Early stopping patience: 5
[2024-11-19 16:55:38] - Weight decay: 0.01
[2024-11-19 16:55:38] - Label smoothing: 0.0
[2024-11-19 16:55:38] 
2024-11-19 16:55:38 - INFO - Initialized roberta-base tokenizer
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:352: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-19 16:55:38] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-19 16:55:38] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-19 16:55:38] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
[2024-11-19 16:55:47] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-19 17:04:02] Epoch 1/50 - Train Loss: 0.7824 - Val Loss: 0.4090 - Val Acc: 0.8483
Checkpoint saved to checkpoints/best_model.pt
[2024-11-19 17:04:03] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-19 17:12:19] Epoch 2/50 - Train Loss: 0.4108 - Val Loss: 0.3860 - Val Acc: 0.8678
Checkpoint saved to checkpoints/best_model.pt
[2024-11-19 17:12:21] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-19 17:20:38] Epoch 3/50 - Train Loss: 0.3123 - Val Loss: 0.3627 - Val Acc: 0.8806
Checkpoint saved to checkpoints/best_model.pt
[2024-11-19 17:20:39] Save best_model.pt for Loss at epochs 3 
Model mode: False
[2024-11-19 17:28:56] Epoch 4/50 - Train Loss: 0.2782 - Val Loss: 0.3720 - Val Acc: 0.8678
Model mode: False
[2024-11-19 17:37:12] Epoch 5/50 - Train Loss: 0.2388 - Val Loss: 0.3652 - Val Acc: 0.8822
Checkpoint saved to checkpoints/best_model.pt
[2024-11-19 17:37:13] Save best_model.pt for Accuracy at epochs 5 
Model mode: False
[2024-11-19 17:45:29] Epoch 6/50 - Train Loss: 0.2308 - Val Loss: 0.3676 - Val Acc: 0.8828
Checkpoint saved to checkpoints/best_model.pt
[2024-11-19 17:45:31] Save best_model.pt for Accuracy at epochs 6 
Model mode: False
[2024-11-19 17:53:47] Epoch 7/50 - Train Loss: 0.2037 - Val Loss: 0.3579 - Val Acc: 0.8856
Checkpoint saved to checkpoints/best_model.pt
[2024-11-19 17:53:48] Save best_model.pt for Loss at epochs 7 
Model mode: False
[2024-11-19 18:02:05] Epoch 8/50 - Train Loss: 0.1756 - Val Loss: 0.3918 - Val Acc: 0.8756
Model mode: False
[2024-11-19 18:10:22] Epoch 9/50 - Train Loss: 0.1632 - Val Loss: 0.3997 - Val Acc: 0.8767
Model mode: False
[2024-11-19 18:18:38] Epoch 10/50 - Train Loss: 0.1515 - Val Loss: 0.4000 - Val Acc: 0.8783
Model mode: False
[2024-11-19 18:26:54] Epoch 11/50 - Train Loss: 0.1465 - Val Loss: 0.4031 - Val Acc: 0.8783
Model mode: False
[2024-11-19 18:35:09] Epoch 12/50 - Train Loss: 0.1388 - Val Loss: 0.4148 - Val Acc: 0.8861
Checkpoint saved to checkpoints/best_model.pt
[2024-11-19 18:35:11] Save best_model.pt for Accuracy at epochs 12 
Model mode: False
[2024-11-19 18:43:26] Learning rate updated to: 1.0000000000000002e-06
[2024-11-19 18:43:26] Epoch 13/50 - Train Loss: 0.1372 - Val Loss: 0.4336 - Val Acc: 0.8806
Model mode: False
[2024-11-19 18:51:42] Epoch 14/50 - Train Loss: 0.1088 - Val Loss: 0.4077 - Val Acc: 0.8861
Model mode: False
[2024-11-19 18:59:58] Epoch 15/50 - Train Loss: 0.0996 - Val Loss: 0.4201 - Val Acc: 0.8828
Model mode: False
[2024-11-19 19:08:14] Epoch 16/50 - Train Loss: 0.1072 - Val Loss: 0.4237 - Val Acc: 0.8850
Model mode: False
[2024-11-19 19:16:30] Epoch 17/50 - Train Loss: 0.1011 - Val Loss: 0.4289 - Val Acc: 0.8833
[2024-11-19 19:16:30] Early stopping triggered after epochs 17 
[2024-11-19 19:16:30] Loading best model from Phase 1
[2024-11-19 19:16:35] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model trainable: True
Model mode: False
[2024-11-19 19:24:51] Epoch 1/50 - Train Loss: 0.1148 - Val Loss: 0.4167 - Val Acc: 0.8850
Checkpoint saved to checkpoints/best_model.pt
[2024-11-19 19:24:52] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-19 19:33:08] Epoch 2/50 - Train Loss: 0.1059 - Val Loss: 0.4324 - Val Acc: 0.8850
Model mode: False
[2024-11-19 19:41:23] Epoch 3/50 - Train Loss: 0.1058 - Val Loss: 0.4171 - Val Acc: 0.8822
Model mode: False
[2024-11-19 19:49:38] Epoch 4/50 - Train Loss: 0.0982 - Val Loss: 0.4317 - Val Acc: 0.8828
Model mode: False
[2024-11-19 19:57:54] Epoch 5/50 - Train Loss: 0.0993 - Val Loss: 0.4409 - Val Acc: 0.8806
Model mode: False
[2024-11-19 20:06:11] Epoch 6/50 - Train Loss: 0.0927 - Val Loss: 0.4485 - Val Acc: 0.8772
[2024-11-19 20:06:11] Early stopping triggered after epochs 6 
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-19 20:06:25 - INFO - Using device: cuda
[2024-11-19 20:06:25] 
Configuration:
[2024-11-19 20:06:25] Mode: test
[2024-11-19 20:06:25] Modality: text_only
[2024-11-19 20:06:25] 
Model Settings:
[2024-11-19 20:06:25] - Number of classes: 4
[2024-11-19 20:06:25] - Text model: roberta-base
[2024-11-19 20:06:25] - Image model: resnet18
[2024-11-19 20:06:25] - Hidden sizes: [256]
[2024-11-19 20:06:25] - Use text: True
[2024-11-19 20:06:25] - Use image: False
[2024-11-19 20:06:25] - Use caption: False
[2024-11-19 20:06:25] - Caption mode: CaptionMode.NONE
[2024-11-19 20:06:25] - Use garbage feature: False
[2024-11-19 20:06:25] - Use similarity: False
[2024-11-19 20:06:25] 
Training Settings:
[2024-11-19 20:06:25] - Batch size: 24
[2024-11-19 20:06:25] - Learning rate: 1e-05
[2024-11-19 20:06:25] - Number of epochs: 50
[2024-11-19 20:06:25] - Max sequence length: 300
[2024-11-19 20:06:25] - Dropout rate: 0.3
[2024-11-19 20:06:25] - Early stopping patience: 5
[2024-11-19 20:06:25] - Weight decay: 0.01
[2024-11-19 20:06:25] - Label smoothing: 0.0
[2024-11-19 20:06:25] 
2024-11-19 20:06:25 - INFO - Initialized roberta-base tokenizer
Some weights of RobertaModel were not initialized from the model checkpoint at roberta-base and are newly initialized: ['roberta.pooler.dense.bias', 'roberta.pooler.dense.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:431: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-19 20:06:25] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-19 20:06:25] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-19 20:06:25] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}

DataLoader Inspection:
--------------------------------------------------

Batch 1:

Text Inputs:
input_ids shape: torch.Size([24, 300])
attention_mask shape: torch.Size([24, 300])
input_ids range: (0, 46261)

Labels:
labels shape: torch.Size([24])
unique labels: [0]
==================================================

Batch 2:

Text Inputs:
input_ids shape: torch.Size([24, 300])
attention_mask shape: torch.Size([24, 300])
input_ids range: (0, 44952)

Labels:
labels shape: torch.Size([24])
unique labels: [0]
==================================================
Model mode: False
test_results['accuracy'] 0.8344505974934422
test_results['precision'] 0.8356620110802553
test_results['recall'] 0.8344505974934422
test_results['f1'] 0.8340585065637809
test_results['loss'] 0.6843244540724917

Confusion Matrix:
--------------------------------------------------
[[528  79  26  62]
 [ 70 936  58  21]
 [ 28  26 736   9]
 [ 87  77  25 663]]
