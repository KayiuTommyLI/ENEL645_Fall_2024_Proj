no change     /home/tommy.li1/miniforge3/condabin/conda
no change     /home/tommy.li1/miniforge3/bin/conda
no change     /home/tommy.li1/miniforge3/bin/conda-env
no change     /home/tommy.li1/miniforge3/bin/activate
no change     /home/tommy.li1/miniforge3/bin/deactivate
no change     /home/tommy.li1/miniforge3/etc/profile.d/conda.sh
no change     /home/tommy.li1/miniforge3/etc/fish/conf.d/conda.fish
no change     /home/tommy.li1/miniforge3/shell/condabin/Conda.psm1
no change     /home/tommy.li1/miniforge3/shell/condabin/conda-hook.ps1
no change     /home/tommy.li1/miniforge3/lib/python3.10/site-packages/xontrib/conda.xsh
no change     /home/tommy.li1/miniforge3/etc/profile.d/conda.csh
no change     /home/tommy.li1/.bashrc
No action taken.
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/tommy.li1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/tommy.li1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-25 21:28:07.505173: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-11-25 21:28:07.528933: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-11-25 21:28:07.558382: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-11-25 21:28:07.567425: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-11-25 21:28:07.588509: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-11-25 21:28:11.367663: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-11-25 21:28:18 - INFO - Using device: cuda
[2024-11-25 21:28:18] 
Configuration:
[2024-11-25 21:28:18] Mode: train
[2024-11-25 21:28:18] Modality: text_only
[2024-11-25 21:28:18] Criterion: WeightedClassificationLoss
[2024-11-25 21:28:18] 
Model Settings:
[2024-11-25 21:28:18] - Number of classes: 4
[2024-11-25 21:28:18] - Text model: distilbert-base-uncased
[2024-11-25 21:28:18] - Image model: resnet18
[2024-11-25 21:28:18] - Hidden sizes: [256]
[2024-11-25 21:28:18] - Use text: True
[2024-11-25 21:28:18] - Use image: False
[2024-11-25 21:28:18] - Use caption: False
[2024-11-25 21:28:18] - Caption mode: none
[2024-11-25 21:28:18] - Use garbage feature: False
[2024-11-25 21:28:18] - Use similarity: False
[2024-11-25 21:28:18] 
Training Settings:
[2024-11-25 21:28:18] - Batch size: 24
[2024-11-25 21:28:18] - Learning rate: 1e-05
[2024-11-25 21:28:18] - Number of epochs: 50
[2024-11-25 21:28:18] - Max sequence length: 300
[2024-11-25 21:28:18] - Dropout rate: 0.3
[2024-11-25 21:28:18] - Early stopping patience: 5
[2024-11-25 21:28:18] - Weight decay: 0.01
[2024-11-25 21:28:18] - Label smoothing: 0.0
[2024-11-25 21:28:18] 
2024-11-25 21:28:18 - INFO - Initialized distilbert-base-uncased tokenizer
/home/tommy.li1/Git/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:365: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-25 21:28:18] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-25 21:28:18] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-25 21:28:18] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {0: 2111, 1: 4355, 2: 1991, 3: 1743}

Val Dataset Statistics:
Size: 1800
Class distribution: {0: 372, 1: 768, 2: 352, 3: 308}

Test Dataset Statistics:
Size: 3431
Class distribution: {0: 695, 1: 1085, 2: 799, 3: 852}
[2024-11-25 21:28:19] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-25 21:32:31] Epoch 1/50 - Train Loss: 1.3927 - Val Loss: 0.9511 - Val Acc: 0.8489
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 21:32:32] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-25 21:36:47] Epoch 2/50 - Train Loss: 0.7827 - Val Loss: 0.8062 - Val Acc: 0.8689
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 21:36:49] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-25 21:41:02] Epoch 3/50 - Train Loss: 0.6007 - Val Loss: 0.7601 - Val Acc: 0.8778
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 21:41:04] Save best_model.pt for Loss at epochs 3 
Model mode: False
[2024-11-25 21:45:17] Epoch 4/50 - Train Loss: 0.5360 - Val Loss: 0.7260 - Val Acc: 0.8861
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 21:45:19] Save best_model.pt for Loss at epochs 4 
Model mode: False
[2024-11-25 21:49:32] Epoch 5/50 - Train Loss: 0.4667 - Val Loss: 0.7284 - Val Acc: 0.8883
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 21:49:34] Save best_model.pt for Accuracy at epochs 5 
Model mode: False
[2024-11-25 21:53:47] Epoch 6/50 - Train Loss: 0.3907 - Val Loss: 0.7365 - Val Acc: 0.8889
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 21:53:49] Save best_model.pt for Accuracy at epochs 6 
Model mode: False
[2024-11-25 21:58:02] Epoch 7/50 - Train Loss: 0.3498 - Val Loss: 0.7121 - Val Acc: 0.8961
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 21:58:04] Save best_model.pt for Loss at epochs 7 
Model mode: False
[2024-11-25 22:02:17] Epoch 8/50 - Train Loss: 0.3305 - Val Loss: 0.7282 - Val Acc: 0.8878
Model mode: False
[2024-11-25 22:06:31] Epoch 9/50 - Train Loss: 0.2840 - Val Loss: 0.7574 - Val Acc: 0.8878
Model mode: False
[2024-11-25 22:10:44] Epoch 10/50 - Train Loss: 0.2746 - Val Loss: 0.7640 - Val Acc: 0.8894
Model mode: False
[2024-11-25 22:14:58] Epoch 11/50 - Train Loss: 0.2461 - Val Loss: 0.7980 - Val Acc: 0.8850
Model mode: False
[2024-11-25 22:19:11] Epoch 12/50 - Train Loss: 0.2479 - Val Loss: 0.7591 - Val Acc: 0.8894
[2024-11-25 22:19:11] Early stopping triggered after epochs 12 
[2024-11-25 22:19:12] Loading best model from Phase 1
[2024-11-25 22:19:14] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model exists: True
Text model trainable: True
Model mode: False
[2024-11-25 22:23:28] Epoch 1/50 - Train Loss: 0.3239 - Val Loss: 0.7340 - Val Acc: 0.8922
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 22:23:29] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-25 22:27:43] Epoch 2/50 - Train Loss: 0.3094 - Val Loss: 0.7244 - Val Acc: 0.8928
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 22:27:45] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-25 22:31:58] Epoch 3/50 - Train Loss: 0.2904 - Val Loss: 0.6945 - Val Acc: 0.8956
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 22:32:00] Save best_model.pt for Loss at epochs 3 
Model mode: False
[2024-11-25 22:36:13] Epoch 4/50 - Train Loss: 0.2764 - Val Loss: 0.7047 - Val Acc: 0.8956
Model mode: False
[2024-11-25 22:40:27] Epoch 5/50 - Train Loss: 0.2739 - Val Loss: 0.7097 - Val Acc: 0.8922
Model mode: False
[2024-11-25 22:44:40] Epoch 6/50 - Train Loss: 0.2796 - Val Loss: 0.7064 - Val Acc: 0.8933
Model mode: False
[2024-11-25 22:48:53] Epoch 7/50 - Train Loss: 0.2607 - Val Loss: 0.7049 - Val Acc: 0.8944
Model mode: False
[2024-11-25 22:53:07] Epoch 8/50 - Train Loss: 0.2753 - Val Loss: 0.7022 - Val Acc: 0.8961
Checkpoint saved to checkpoints/best_model.pt
[2024-11-25 22:53:09] Save best_model.pt for Accuracy at epochs 8 
Model mode: False
[2024-11-25 22:57:22] Learning rate updated to: 1.0000000000000002e-07
[2024-11-25 22:57:22] Epoch 9/50 - Train Loss: 0.2787 - Val Loss: 0.7006 - Val Acc: 0.8961
Model mode: False
[2024-11-25 23:01:36] Epoch 10/50 - Train Loss: 0.2476 - Val Loss: 0.7113 - Val Acc: 0.8928
Model mode: False
[2024-11-25 23:05:50] Epoch 11/50 - Train Loss: 0.2542 - Val Loss: 0.7160 - Val Acc: 0.8939
Model mode: False
[2024-11-25 23:10:03] Epoch 12/50 - Train Loss: 0.2223 - Val Loss: 0.7194 - Val Acc: 0.8928
Model mode: False
[2024-11-25 23:14:17] Epoch 13/50 - Train Loss: 0.2387 - Val Loss: 0.7070 - Val Acc: 0.8956
[2024-11-25 23:14:17] Early stopping triggered after epochs 13 
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/tommy.li1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/tommy.li1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-25 23:14:31.771373: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2024-11-25 23:14:31.794796: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:485] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
2024-11-25 23:14:31.823983: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:8454] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
2024-11-25 23:14:31.832939: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1452] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-11-25 23:14:31.853617: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2024-11-25 23:14:34.588367: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
2024-11-25 23:14:39 - INFO - Using device: cuda
[2024-11-25 23:14:39] 
Configuration:
[2024-11-25 23:14:39] Mode: test
[2024-11-25 23:14:39] Modality: text_only
[2024-11-25 23:14:39] Criterion: WeightedClassificationLoss
[2024-11-25 23:14:39] 
Model Settings:
[2024-11-25 23:14:39] - Number of classes: 4
[2024-11-25 23:14:39] - Text model: distilbert-base-uncased
[2024-11-25 23:14:39] - Image model: resnet18
[2024-11-25 23:14:39] - Hidden sizes: [256]
[2024-11-25 23:14:39] - Use text: True
[2024-11-25 23:14:39] - Use image: False
[2024-11-25 23:14:39] - Use caption: False
[2024-11-25 23:14:39] - Caption mode: none
[2024-11-25 23:14:39] - Use garbage feature: False
[2024-11-25 23:14:39] - Use similarity: False
[2024-11-25 23:14:39] 
Training Settings:
[2024-11-25 23:14:39] - Batch size: 24
[2024-11-25 23:14:39] - Learning rate: 1e-05
[2024-11-25 23:14:39] - Number of epochs: 50
[2024-11-25 23:14:39] - Max sequence length: 300
[2024-11-25 23:14:39] - Dropout rate: 0.3
[2024-11-25 23:14:39] - Early stopping patience: 5
[2024-11-25 23:14:39] - Weight decay: 0.01
[2024-11-25 23:14:39] - Label smoothing: 0.0
[2024-11-25 23:14:39] 
2024-11-25 23:14:40 - INFO - Initialized distilbert-base-uncased tokenizer
/home/tommy.li1/Git/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:444: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-25 23:14:40] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-25 23:14:40] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-25 23:14:40] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {0: 2111, 1: 4355, 2: 1991, 3: 1743}

Val Dataset Statistics:
Size: 1800
Class distribution: {0: 372, 1: 768, 2: 352, 3: 308}

Test Dataset Statistics:
Size: 3431
Class distribution: {0: 695, 1: 1085, 2: 799, 3: 852}
Model mode: False
test_results['accuracy'] 0.8423200233168172
test_results['precision'] 0.8430659849733293
test_results['recall'] 0.8423200233168172
test_results['f1'] 0.8416441386469199
test_results['loss'] 1.0753660762578354

Confusion Matrix:
--------------------------------------------------
[[521  94  22  58]
 [ 67 941  56  21]
 [ 21  20 754   4]
 [ 85  73  20 674]]
Classification results saved to test_classification_results.json
