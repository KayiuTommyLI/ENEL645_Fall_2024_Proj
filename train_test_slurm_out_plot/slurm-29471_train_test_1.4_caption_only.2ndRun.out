[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-26 15:01:51 - INFO - Using device: cuda
[2024-11-26 15:01:51] 
Configuration:
[2024-11-26 15:01:51] Mode: train
[2024-11-26 15:01:51] Modality: caption_only
[2024-11-26 15:01:51] Criterion: CrossEntropyLoss
[2024-11-26 15:01:51] 
Model Settings:
[2024-11-26 15:01:51] - Number of classes: 4
[2024-11-26 15:01:51] - Text model: distilbert-base-uncased
[2024-11-26 15:01:51] - Image model: resnet18
[2024-11-26 15:01:51] - Hidden sizes: [256]
[2024-11-26 15:01:51] - Use text: False
[2024-11-26 15:01:51] - Use image: False
[2024-11-26 15:01:51] - Use caption: True
[2024-11-26 15:01:51] - Caption mode: CaptionMode.SEPARATE
[2024-11-26 15:01:51] - Use garbage feature: False
[2024-11-26 15:01:51] - Use similarity: False
[2024-11-26 15:01:51] 
Training Settings:
[2024-11-26 15:01:51] - Batch size: 24
[2024-11-26 15:01:51] - Learning rate: 1e-05
[2024-11-26 15:01:51] - Number of epochs: 50
[2024-11-26 15:01:51] - Max sequence length: 300
[2024-11-26 15:01:51] - Dropout rate: 0.3
[2024-11-26 15:01:51] - Early stopping patience: 5
[2024-11-26 15:01:51] - Weight decay: 0.01
[2024-11-26 15:01:51] - Label smoothing: 0.0
[2024-11-26 15:01:51] 
2024-11-26 15:01:51 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:365: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-26 15:01:51] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-26 15:01:51] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-26 15:01:51] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test
Loaded captions: 15431
Loaded captions: 15431
Loaded captions: 15431

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
[2024-11-26 15:01:52] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-26 15:05:59] Epoch 1/50 - Train Loss: 0.7886 - Val Loss: 0.6314 - Val Acc: 0.7567
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 15:06:00] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-26 15:10:15] Epoch 2/50 - Train Loss: 0.5572 - Val Loss: 0.5910 - Val Acc: 0.7594
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 15:10:16] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-26 15:14:31] Epoch 3/50 - Train Loss: 0.4520 - Val Loss: 0.5896 - Val Acc: 0.7794
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 15:14:33] Save best_model.pt for Loss at epochs 3 
Model mode: False
[2024-11-26 15:18:46] Epoch 4/50 - Train Loss: 0.4234 - Val Loss: 0.5819 - Val Acc: 0.7828
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 15:18:47] Save best_model.pt for Loss at epochs 4 
Model mode: False
[2024-11-26 15:23:00] Epoch 5/50 - Train Loss: 0.3988 - Val Loss: 0.5835 - Val Acc: 0.7794
Model mode: False
[2024-11-26 15:27:13] Epoch 6/50 - Train Loss: 0.3431 - Val Loss: 0.5801 - Val Acc: 0.7772
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 15:27:15] Save best_model.pt for Loss at epochs 6 
Model mode: False
[2024-11-26 15:31:27] Epoch 7/50 - Train Loss: 0.3050 - Val Loss: 0.6218 - Val Acc: 0.7889
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 15:31:29] Save best_model.pt for Accuracy at epochs 7 
Model mode: False
[2024-11-26 15:35:42] Epoch 8/50 - Train Loss: 0.2765 - Val Loss: 0.6185 - Val Acc: 0.7878
Model mode: False
[2024-11-26 15:39:54] Epoch 9/50 - Train Loss: 0.2581 - Val Loss: 0.6439 - Val Acc: 0.7861
Model mode: False
[2024-11-26 15:44:07] Epoch 10/50 - Train Loss: 0.2192 - Val Loss: 0.6748 - Val Acc: 0.7761
Model mode: False
[2024-11-26 15:48:20] Epoch 11/50 - Train Loss: 0.2141 - Val Loss: 0.6949 - Val Acc: 0.7833
Model mode: False
[2024-11-26 15:52:33] Learning rate updated to: 1.0000000000000002e-06
[2024-11-26 15:52:33] Epoch 12/50 - Train Loss: 0.1964 - Val Loss: 0.7055 - Val Acc: 0.7933
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 15:52:34] Save best_model.pt for Accuracy at epochs 12 
Model mode: False
[2024-11-26 15:56:46] Epoch 13/50 - Train Loss: 0.1805 - Val Loss: 0.6970 - Val Acc: 0.7950
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 15:56:48] Save best_model.pt for Accuracy at epochs 13 
Model mode: False
[2024-11-26 16:01:00] Epoch 14/50 - Train Loss: 0.1681 - Val Loss: 0.7176 - Val Acc: 0.7906
Model mode: False
[2024-11-26 16:05:13] Epoch 15/50 - Train Loss: 0.1642 - Val Loss: 0.7035 - Val Acc: 0.7944
Model mode: False
[2024-11-26 16:09:25] Epoch 16/50 - Train Loss: 0.1609 - Val Loss: 0.7218 - Val Acc: 0.7900
Model mode: False
[2024-11-26 16:13:38] Epoch 17/50 - Train Loss: 0.1494 - Val Loss: 0.7132 - Val Acc: 0.7911
Model mode: False
[2024-11-26 16:17:51] Learning rate updated to: 1.0000000000000002e-07
[2024-11-26 16:17:51] Epoch 18/50 - Train Loss: 0.1586 - Val Loss: 0.7203 - Val Acc: 0.7922
[2024-11-26 16:17:51] Early stopping triggered after epochs 18 
[2024-11-26 16:17:52] Loading best model from Phase 1
[2024-11-26 16:17:58] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model exists: True
Text model trainable: True
Model mode: False
[2024-11-26 16:22:10] Epoch 1/50 - Train Loss: 0.1660 - Val Loss: 0.7111 - Val Acc: 0.7933
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 16:22:11] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-26 16:26:23] Epoch 2/50 - Train Loss: 0.1564 - Val Loss: 0.7235 - Val Acc: 0.7906
Model mode: False
[2024-11-26 16:30:36] Epoch 3/50 - Train Loss: 0.1608 - Val Loss: 0.7289 - Val Acc: 0.7944
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 16:30:37] Save best_model.pt for Accuracy at epochs 3 
Model mode: False
[2024-11-26 16:34:49] Epoch 4/50 - Train Loss: 0.1545 - Val Loss: 0.7304 - Val Acc: 0.7928
Model mode: False
[2024-11-26 16:39:02] Epoch 5/50 - Train Loss: 0.1559 - Val Loss: 0.7262 - Val Acc: 0.7994
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 16:39:03] Save best_model.pt for Accuracy at epochs 5 
Model mode: False
[2024-11-26 16:43:15] Epoch 6/50 - Train Loss: 0.1403 - Val Loss: 0.7184 - Val Acc: 0.7989
Model mode: False
[2024-11-26 16:47:28] Learning rate updated to: 1.0000000000000002e-07
[2024-11-26 16:47:28] Epoch 7/50 - Train Loss: 0.1422 - Val Loss: 0.7177 - Val Acc: 0.7989
Model mode: False
[2024-11-26 16:51:40] Epoch 8/50 - Train Loss: 0.1417 - Val Loss: 0.7349 - Val Acc: 0.7944
Model mode: False
[2024-11-26 16:55:52] Epoch 9/50 - Train Loss: 0.1369 - Val Loss: 0.7230 - Val Acc: 0.7983
Model mode: False
[2024-11-26 17:00:04] Epoch 10/50 - Train Loss: 0.1515 - Val Loss: 0.7261 - Val Acc: 0.7989
[2024-11-26 17:00:04] Early stopping triggered after epochs 10 
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-26 17:01:01 - INFO - Using device: cuda
[2024-11-26 17:01:01] 
Configuration:
[2024-11-26 17:01:01] Mode: test
[2024-11-26 17:01:01] Modality: caption_only
[2024-11-26 17:01:01] Criterion: CrossEntropyLoss
[2024-11-26 17:01:01] 
Model Settings:
[2024-11-26 17:01:01] - Number of classes: 4
[2024-11-26 17:01:01] - Text model: distilbert-base-uncased
[2024-11-26 17:01:01] - Image model: resnet18
[2024-11-26 17:01:01] - Hidden sizes: [256]
[2024-11-26 17:01:01] - Use text: False
[2024-11-26 17:01:01] - Use image: False
[2024-11-26 17:01:01] - Use caption: True
[2024-11-26 17:01:01] - Caption mode: CaptionMode.SEPARATE
[2024-11-26 17:01:01] - Use garbage feature: False
[2024-11-26 17:01:01] - Use similarity: False
[2024-11-26 17:01:01] 
Training Settings:
[2024-11-26 17:01:01] - Batch size: 24
[2024-11-26 17:01:01] - Learning rate: 1e-05
[2024-11-26 17:01:01] - Number of epochs: 50
[2024-11-26 17:01:01] - Max sequence length: 300
[2024-11-26 17:01:01] - Dropout rate: 0.3
[2024-11-26 17:01:01] - Early stopping patience: 5
[2024-11-26 17:01:01] - Weight decay: 0.01
[2024-11-26 17:01:01] - Label smoothing: 0.0
[2024-11-26 17:01:01] 
2024-11-26 17:01:01 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:444: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-26 17:01:01] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-26 17:01:01] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-26 17:01:01] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test
Loaded captions: 15431
Loaded captions: 15431
Loaded captions: 15431

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
Model mode: False
test_results['accuracy'] 0.7642086855144273
test_results['precision'] 0.7623790034627683
test_results['recall'] 0.7642086855144273
test_results['f1'] 0.7623660424453104
test_results['loss'] 0.8748098526905467

Confusion Matrix:
--------------------------------------------------
[[404 161  31  99]
 [ 99 866  63  57]
 [ 36  38 702  23]
 [ 76 114  12 650]]
Classification results saved to test_classification_results.json
