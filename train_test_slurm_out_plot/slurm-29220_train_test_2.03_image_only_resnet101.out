[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-23 09:55:28 - INFO - Using device: cuda
[2024-11-23 09:55:28] 
Configuration:
[2024-11-23 09:55:28] Mode: train
[2024-11-23 09:55:28] Modality: image_only
[2024-11-23 09:55:28] 
Model Settings:
[2024-11-23 09:55:28] - Number of classes: 4
[2024-11-23 09:55:28] - Text model: distilbert-base-uncased
[2024-11-23 09:55:28] - Image model: resnet101
[2024-11-23 09:55:28] - Hidden sizes: [256]
[2024-11-23 09:55:28] - Use text: False
[2024-11-23 09:55:28] - Use image: True
[2024-11-23 09:55:28] - Use caption: False
[2024-11-23 09:55:28] - Caption mode: CaptionMode.NONE
[2024-11-23 09:55:28] - Use garbage feature: False
[2024-11-23 09:55:28] - Use similarity: False
[2024-11-23 09:55:28] 
Training Settings:
[2024-11-23 09:55:28] - Batch size: 24
[2024-11-23 09:55:28] - Learning rate: 1e-05
[2024-11-23 09:55:28] - Number of epochs: 50
[2024-11-23 09:55:28] - Max sequence length: 300
[2024-11-23 09:55:28] - Dropout rate: 0.3
[2024-11-23 09:55:28] - Early stopping patience: 5
[2024-11-23 09:55:28] - Weight decay: 0.01
[2024-11-23 09:55:28] - Label smoothing: 0.0
[2024-11-23 09:55:28] 
2024-11-23 09:55:29 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet101_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet101_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
Downloading: "https://download.pytorch.org/models/resnet101-63fe2227.pth" to /home/jeffrey.wong1/.cache/torch/hub/checkpoints/resnet101-63fe2227.pth
[2024-11-23 09:55:29] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-23 09:55:29] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-23 09:55:29] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
  0%|          | 0.00/171M [00:00<?, ?B/s]  5%|▍         | 8.25M/171M [00:00<00:01, 86.0MB/s] 10%|█         | 17.2M/171M [00:00<00:01, 90.7MB/s] 16%|█▌        | 27.6M/171M [00:00<00:01, 98.8MB/s] 23%|██▎       | 38.6M/171M [00:00<00:01, 105MB/s]  29%|██▉       | 49.9M/171M [00:00<00:01, 110MB/s] 36%|███▌      | 61.1M/171M [00:00<00:01, 112MB/s] 42%|████▏     | 72.4M/171M [00:00<00:00, 114MB/s] 49%|████▉     | 83.6M/171M [00:00<00:00, 115MB/s] 56%|█████▌    | 94.9M/171M [00:00<00:00, 116MB/s] 62%|██████▏   | 106M/171M [00:01<00:00, 116MB/s]  69%|██████▉   | 117M/171M [00:01<00:00, 117MB/s] 75%|███████▌  | 129M/171M [00:01<00:00, 117MB/s] 82%|████████▏ | 140M/171M [00:01<00:00, 117MB/s] 89%|████████▊ | 151M/171M [00:01<00:00, 117MB/s] 95%|█████████▌| 162M/171M [00:01<00:00, 117MB/s]100%|██████████| 171M/171M [00:01<00:00, 113MB/s]
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:360: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-23 09:55:34] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-23 10:10:59] Epoch 1/50 - Train Loss: 0.7768 - Val Loss: 0.6741 - Val Acc: 0.7467
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 10:11:00] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-23 10:26:19] Epoch 2/50 - Train Loss: 0.4361 - Val Loss: 0.6127 - Val Acc: 0.7711
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 10:26:21] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-23 10:41:52] Epoch 3/50 - Train Loss: 0.2947 - Val Loss: 0.6177 - Val Acc: 0.7811
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 10:41:54] Save best_model.pt for Accuracy at epochs 3 
Model mode: False
[2024-11-23 10:57:22] Epoch 4/50 - Train Loss: 0.1920 - Val Loss: 0.6544 - Val Acc: 0.7789
Model mode: False
[2024-11-23 11:12:49] Epoch 5/50 - Train Loss: 0.1307 - Val Loss: 0.6685 - Val Acc: 0.7883
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 11:12:51] Save best_model.pt for Accuracy at epochs 5 
Model mode: False
[2024-11-23 11:28:15] Epoch 6/50 - Train Loss: 0.0896 - Val Loss: 0.7274 - Val Acc: 0.7889
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 11:28:17] Save best_model.pt for Accuracy at epochs 6 
Model mode: False
[2024-11-23 11:43:42] Epoch 7/50 - Train Loss: 0.0671 - Val Loss: 0.7389 - Val Acc: 0.7833
Model mode: False
[2024-11-23 11:59:05] Learning rate updated to: 1.0000000000000002e-06
[2024-11-23 11:59:05] Epoch 8/50 - Train Loss: 0.0552 - Val Loss: 0.7677 - Val Acc: 0.7800
Model mode: False
[2024-11-23 12:14:31] Epoch 9/50 - Train Loss: 0.0436 - Val Loss: 0.7579 - Val Acc: 0.7867
Model mode: False
[2024-11-23 12:29:56] Epoch 10/50 - Train Loss: 0.0376 - Val Loss: 0.7450 - Val Acc: 0.7856
Model mode: False
[2024-11-23 12:45:22] Epoch 11/50 - Train Loss: 0.0277 - Val Loss: 0.7522 - Val Acc: 0.7861
[2024-11-23 12:45:22] Early stopping triggered after epochs 11 
[2024-11-23 12:45:22] Loading best model from Phase 1
[2024-11-23 12:45:28] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model exists: True
Text model trainable: True
Image model exists: True
Image model trainable: True
Model mode: False
[2024-11-23 13:00:50] Epoch 1/50 - Train Loss: 0.0673 - Val Loss: 0.6926 - Val Acc: 0.7889
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 13:00:51] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-23 13:16:10] Epoch 2/50 - Train Loss: 0.0547 - Val Loss: 0.7076 - Val Acc: 0.7911
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 13:16:12] Save best_model.pt for Accuracy at epochs 2 
Model mode: False
[2024-11-23 13:31:32] Epoch 3/50 - Train Loss: 0.0547 - Val Loss: 0.7069 - Val Acc: 0.7867
Model mode: False
[2024-11-23 13:46:50] Epoch 4/50 - Train Loss: 0.0494 - Val Loss: 0.7130 - Val Acc: 0.7917
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 13:46:51] Save best_model.pt for Accuracy at epochs 4 
Model mode: False
[2024-11-23 14:02:09] Epoch 5/50 - Train Loss: 0.0427 - Val Loss: 0.7098 - Val Acc: 0.7939
Checkpoint saved to checkpoints/best_model.pt
[2024-11-23 14:02:11] Save best_model.pt for Accuracy at epochs 5 
Model mode: False
[2024-11-23 14:17:31] Epoch 6/50 - Train Loss: 0.0391 - Val Loss: 0.7242 - Val Acc: 0.7867
Model mode: False
[2024-11-23 14:32:52] Learning rate updated to: 1.0000000000000002e-07
[2024-11-23 14:32:52] Epoch 7/50 - Train Loss: 0.0328 - Val Loss: 0.7464 - Val Acc: 0.7878
Model mode: False
[2024-11-23 14:48:13] Epoch 8/50 - Train Loss: 0.0320 - Val Loss: 0.7336 - Val Acc: 0.7894
Model mode: False
[2024-11-23 15:03:32] Epoch 9/50 - Train Loss: 0.0323 - Val Loss: 0.7293 - Val Acc: 0.7850
Model mode: False
[2024-11-23 15:18:50] Epoch 10/50 - Train Loss: 0.0332 - Val Loss: 0.7307 - Val Acc: 0.7911
[2024-11-23 15:18:50] Early stopping triggered after epochs 10 
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-23 15:19:06 - INFO - Using device: cuda
[2024-11-23 15:19:06] 
Configuration:
[2024-11-23 15:19:06] Mode: test
[2024-11-23 15:19:06] Modality: image_only
[2024-11-23 15:19:06] 
Model Settings:
[2024-11-23 15:19:06] - Number of classes: 4
[2024-11-23 15:19:06] - Text model: distilbert-base-uncased
[2024-11-23 15:19:06] - Image model: resnet101
[2024-11-23 15:19:06] - Hidden sizes: [256]
[2024-11-23 15:19:06] - Use text: False
[2024-11-23 15:19:06] - Use image: True
[2024-11-23 15:19:06] - Use caption: False
[2024-11-23 15:19:06] - Caption mode: CaptionMode.NONE
[2024-11-23 15:19:06] - Use garbage feature: False
[2024-11-23 15:19:06] - Use similarity: False
[2024-11-23 15:19:06] 
Training Settings:
[2024-11-23 15:19:06] - Batch size: 24
[2024-11-23 15:19:06] - Learning rate: 1e-05
[2024-11-23 15:19:06] - Number of epochs: 50
[2024-11-23 15:19:06] - Max sequence length: 300
[2024-11-23 15:19:06] - Dropout rate: 0.3
[2024-11-23 15:19:06] - Early stopping patience: 5
[2024-11-23 15:19:06] - Weight decay: 0.01
[2024-11-23 15:19:06] - Label smoothing: 0.0
[2024-11-23 15:19:06] 
2024-11-23 15:19:06 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet101_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet101_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:439: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-23 15:19:06] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-23 15:19:06] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-23 15:19:06] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
Model mode: False
test_results['accuracy'] 0.7193238122996211
test_results['precision'] 0.7223726298224222
test_results['recall'] 0.7193238122996211
test_results['f1'] 0.7170687595756725
test_results['loss'] 0.9640042392888686

Confusion Matrix:
--------------------------------------------------
[[386 182  48  79]
 [108 873  38  66]
 [ 46  62 676  15]
 [104 175  40 533]]
Classification results saved to test_classification_results.json
