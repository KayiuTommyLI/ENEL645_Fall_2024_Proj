[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-25 23:54:16 - INFO - Using device: cuda
[2024-11-25 23:54:16] 
Configuration:
[2024-11-25 23:54:16] Mode: train
[2024-11-25 23:54:16] Modality: text_only
[2024-11-25 23:54:16] Criterion: CrossEntropyLoss
[2024-11-25 23:54:16] 
Model Settings:
[2024-11-25 23:54:16] - Number of classes: 4
[2024-11-25 23:54:16] - Text model: xlnet-base-cased
[2024-11-25 23:54:16] - Image model: resnet18
[2024-11-25 23:54:16] - Hidden sizes: [256]
[2024-11-25 23:54:16] - Use text: True
[2024-11-25 23:54:16] - Use image: False
[2024-11-25 23:54:16] - Use caption: False
[2024-11-25 23:54:16] - Caption mode: CaptionMode.NONE
[2024-11-25 23:54:16] - Use garbage feature: False
[2024-11-25 23:54:16] - Use similarity: False
[2024-11-25 23:54:16] 
Training Settings:
[2024-11-25 23:54:16] - Batch size: 24
[2024-11-25 23:54:16] - Learning rate: 1e-05
[2024-11-25 23:54:16] - Number of epochs: 50
[2024-11-25 23:54:16] - Max sequence length: 300
[2024-11-25 23:54:16] - Dropout rate: 0.3
[2024-11-25 23:54:16] - Early stopping patience: 5
[2024-11-25 23:54:16] - Weight decay: 0.01
[2024-11-25 23:54:16] - Label smoothing: 0.0
[2024-11-25 23:54:16] 
2024-11-25 23:54:19 - INFO - Initialized xlnet-base-cased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:365: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-25 23:54:19] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-25 23:54:19] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-25 23:54:19] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
[2024-11-25 23:54:44] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-26 00:09:29] Epoch 1/50 - Train Loss: 1.3464 - Val Loss: 0.7736 - Val Acc: 0.6906
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 00:09:32] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-26 00:24:16] Epoch 2/50 - Train Loss: 0.6841 - Val Loss: 0.4790 - Val Acc: 0.8189
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 00:24:19] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-26 00:39:03] Epoch 3/50 - Train Loss: 0.4996 - Val Loss: 0.4546 - Val Acc: 0.8361
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 00:39:06] Save best_model.pt for Loss at epochs 3 
Model mode: False
[2024-11-26 00:53:50] Epoch 4/50 - Train Loss: 0.4002 - Val Loss: 0.3890 - Val Acc: 0.8683
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 00:53:53] Save best_model.pt for Loss at epochs 4 
Model mode: False
[2024-11-26 01:08:38] Epoch 5/50 - Train Loss: 0.3563 - Val Loss: 0.4111 - Val Acc: 0.8556
Model mode: False
[2024-11-26 01:23:22] Epoch 6/50 - Train Loss: 0.3197 - Val Loss: 0.4309 - Val Acc: 0.8583
Model mode: False
[2024-11-26 01:38:06] Epoch 7/50 - Train Loss: 0.2881 - Val Loss: 0.3780 - Val Acc: 0.8783
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 01:38:09] Save best_model.pt for Loss at epochs 7 
Model mode: False
[2024-11-26 01:52:53] Epoch 8/50 - Train Loss: 0.2596 - Val Loss: 0.3843 - Val Acc: 0.8856
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 01:52:56] Save best_model.pt for Accuracy at epochs 8 
Model mode: False
[2024-11-26 02:07:40] Epoch 9/50 - Train Loss: 0.2339 - Val Loss: 0.3946 - Val Acc: 0.8811
Model mode: False
[2024-11-26 02:22:25] Epoch 10/50 - Train Loss: 0.2209 - Val Loss: 0.4151 - Val Acc: 0.8667
Model mode: False
[2024-11-26 02:37:09] Epoch 11/50 - Train Loss: 0.1986 - Val Loss: 0.4155 - Val Acc: 0.8817
Model mode: False
[2024-11-26 02:51:53] Epoch 12/50 - Train Loss: 0.1808 - Val Loss: 0.4022 - Val Acc: 0.8789
Model mode: False
[2024-11-26 03:06:37] Learning rate updated to: 1.0000000000000002e-06
[2024-11-26 03:06:37] Epoch 13/50 - Train Loss: 0.1818 - Val Loss: 0.4262 - Val Acc: 0.8794
[2024-11-26 03:06:37] Early stopping triggered after epochs 13 
[2024-11-26 03:06:38] Loading best model from Phase 1
[2024-11-26 03:06:42] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model exists: True
Text model trainable: True
Model mode: False
[2024-11-26 03:21:26] Epoch 1/50 - Train Loss: 0.2237 - Val Loss: 0.3668 - Val Acc: 0.8878
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 03:21:29] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-26 03:36:13] Epoch 2/50 - Train Loss: 0.2346 - Val Loss: 0.3683 - Val Acc: 0.8861
Model mode: False
[2024-11-26 03:50:57] Epoch 3/50 - Train Loss: 0.2059 - Val Loss: 0.3746 - Val Acc: 0.8806
Model mode: False
[2024-11-26 04:05:41] Epoch 4/50 - Train Loss: 0.2212 - Val Loss: 0.3767 - Val Acc: 0.8811
Model mode: False
[2024-11-26 04:20:25] Epoch 5/50 - Train Loss: 0.2222 - Val Loss: 0.3667 - Val Acc: 0.8872
Checkpoint saved to checkpoints/best_model.pt
[2024-11-26 04:20:28] Save best_model.pt for Loss at epochs 5 
Model mode: False
[2024-11-26 04:35:12] Epoch 6/50 - Train Loss: 0.2028 - Val Loss: 0.3729 - Val Acc: 0.8861
Model mode: False
[2024-11-26 04:49:56] Learning rate updated to: 1.0000000000000002e-07
[2024-11-26 04:49:56] Epoch 7/50 - Train Loss: 0.1996 - Val Loss: 0.3830 - Val Acc: 0.8817
Model mode: False
[2024-11-26 05:04:40] Epoch 8/50 - Train Loss: 0.2018 - Val Loss: 0.3807 - Val Acc: 0.8828
Model mode: False
[2024-11-26 05:19:24] Epoch 9/50 - Train Loss: 0.1921 - Val Loss: 0.3862 - Val Acc: 0.8822
Model mode: False
[2024-11-26 05:34:09] Epoch 10/50 - Train Loss: 0.2034 - Val Loss: 0.3770 - Val Acc: 0.8856
[2024-11-26 05:34:09] Early stopping triggered after epochs 10 
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-26 05:34:24 - INFO - Using device: cuda
[2024-11-26 05:34:24] 
Configuration:
[2024-11-26 05:34:24] Mode: test
[2024-11-26 05:34:24] Modality: text_only
[2024-11-26 05:34:24] Criterion: CrossEntropyLoss
[2024-11-26 05:34:24] 
Model Settings:
[2024-11-26 05:34:24] - Number of classes: 4
[2024-11-26 05:34:24] - Text model: xlnet-base-cased
[2024-11-26 05:34:24] - Image model: resnet18
[2024-11-26 05:34:24] - Hidden sizes: [256]
[2024-11-26 05:34:24] - Use text: True
[2024-11-26 05:34:24] - Use image: False
[2024-11-26 05:34:24] - Use caption: False
[2024-11-26 05:34:24] - Caption mode: CaptionMode.NONE
[2024-11-26 05:34:24] - Use garbage feature: False
[2024-11-26 05:34:24] - Use similarity: False
[2024-11-26 05:34:24] 
Training Settings:
[2024-11-26 05:34:24] - Batch size: 24
[2024-11-26 05:34:24] - Learning rate: 1e-05
[2024-11-26 05:34:24] - Number of epochs: 50
[2024-11-26 05:34:24] - Max sequence length: 300
[2024-11-26 05:34:24] - Dropout rate: 0.3
[2024-11-26 05:34:24] - Early stopping patience: 5
[2024-11-26 05:34:24] - Weight decay: 0.01
[2024-11-26 05:34:24] - Label smoothing: 0.0
[2024-11-26 05:34:24] 
2024-11-26 05:34:28 - INFO - Initialized xlnet-base-cased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:444: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-26 05:34:28] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-26 05:34:28] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-26 05:34:28] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
Model mode: False
test_results['accuracy'] 0.8464004663363451
test_results['precision'] 0.8473688694061267
test_results['recall'] 0.8464004663363451
test_results['f1'] 0.8461602261547525
test_results['loss'] 0.5327574727418539

Confusion Matrix:
--------------------------------------------------
[[539  73  26  57]
 [ 64 946  52  23]
 [ 34  21 737   7]
 [ 72  80  18 682]]
Classification results saved to test_classification_results.json
