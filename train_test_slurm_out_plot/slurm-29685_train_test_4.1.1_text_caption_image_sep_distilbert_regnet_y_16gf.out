[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-28 18:16:05 - INFO - Using device: cuda
[2024-11-28 18:16:05] 
Configuration:
[2024-11-28 18:16:05] Mode: train
[2024-11-28 18:16:05] Modality: text_caption_image_sep
[2024-11-28 18:16:05] Criterion: CrossEntropyLoss
[2024-11-28 18:16:05] 
Model Settings:
[2024-11-28 18:16:05] - Number of classes: 4
[2024-11-28 18:16:05] - Text model: distilbert-base-uncased
[2024-11-28 18:16:05] - Image model: regnet_y_16gf
[2024-11-28 18:16:05] - Hidden sizes: [256]
[2024-11-28 18:16:05] - Use text: True
[2024-11-28 18:16:05] - Use image: True
[2024-11-28 18:16:05] - Use caption: True
[2024-11-28 18:16:05] - Caption mode: CaptionMode.SEPARATE
[2024-11-28 18:16:05] - Use garbage feature: False
[2024-11-28 18:16:05] - Use similarity: False
[2024-11-28 18:16:05] 
Training Settings:
[2024-11-28 18:16:05] - Batch size: 24
[2024-11-28 18:16:05] - Learning rate: 1e-05
[2024-11-28 18:16:05] - Number of epochs: 50
[2024-11-28 18:16:05] - Max sequence length: 300
[2024-11-28 18:16:05] - Dropout rate: 0.3
[2024-11-28 18:16:05] - Early stopping patience: 5
[2024-11-28 18:16:05] - Weight decay: 0.01
[2024-11-28 18:16:05] - Label smoothing: 0.0
[2024-11-28 18:16:05] 
2024-11-28 18:16:06 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:369: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-28 18:16:06] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-28 18:16:06] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-28 18:16:06] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test
Loaded captions: 15431
Loaded captions: 15431
Loaded captions: 15431

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
[2024-11-28 18:16:08] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-28 18:44:21] Epoch 1/50 - Train Loss: 0.5183 - Val Loss: 0.3446 - Val Acc: 0.8794
Checkpoint saved to checkpoints/best_model.pt
[2024-11-28 18:44:25] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-28 19:12:23] Epoch 2/50 - Train Loss: 0.2448 - Val Loss: 0.3148 - Val Acc: 0.8889
Checkpoint saved to checkpoints/best_model.pt
[2024-11-28 19:12:27] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-28 19:40:25] Epoch 3/50 - Train Loss: 0.1680 - Val Loss: 0.3001 - Val Acc: 0.8983
Checkpoint saved to checkpoints/best_model.pt
[2024-11-28 19:40:29] Save best_model.pt for Loss at epochs 3 
Model mode: False
[2024-11-28 20:08:28] Epoch 4/50 - Train Loss: 0.1104 - Val Loss: 0.3114 - Val Acc: 0.9011
Checkpoint saved to checkpoints/best_model.pt
[2024-11-28 20:08:32] Save best_model.pt for Accuracy at epochs 4 
Model mode: False
[2024-11-28 20:36:36] Epoch 5/50 - Train Loss: 0.0757 - Val Loss: 0.3271 - Val Acc: 0.8917
Model mode: False
[2024-11-28 21:04:44] Epoch 6/50 - Train Loss: 0.0567 - Val Loss: 0.3334 - Val Acc: 0.9017
Checkpoint saved to checkpoints/best_model.pt
[2024-11-28 21:04:47] Save best_model.pt for Accuracy at epochs 6 
Model mode: False
[2024-11-28 21:32:51] Epoch 7/50 - Train Loss: 0.0432 - Val Loss: 0.3634 - Val Acc: 0.9006
Model mode: False
[2024-11-28 22:01:00] Epoch 8/50 - Train Loss: 0.0375 - Val Loss: 0.3540 - Val Acc: 0.9000
Model mode: False
[2024-11-28 22:29:03] Learning rate updated to: 1.0000000000000002e-06
[2024-11-28 22:29:03] Epoch 9/50 - Train Loss: 0.0260 - Val Loss: 0.3829 - Val Acc: 0.8928
Model mode: False
[2024-11-28 22:57:03] Epoch 10/50 - Train Loss: 0.0244 - Val Loss: 0.3712 - Val Acc: 0.9000
Model mode: False
[2024-11-28 23:25:03] Epoch 11/50 - Train Loss: 0.0220 - Val Loss: 0.3730 - Val Acc: 0.9011
[2024-11-28 23:25:03] Early stopping triggered after epochs 11 
[2024-11-28 23:25:04] Loading best model from Phase 1
[2024-11-28 23:25:51] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model exists: True
Text model trainable: True
Image model exists: True
Image model trainable: True
Model mode: False
[2024-11-28 23:53:51] Epoch 1/50 - Train Loss: 0.0440 - Val Loss: 0.3248 - Val Acc: 0.9056
Checkpoint saved to checkpoints/best_model.pt
[2024-11-28 23:53:55] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-29 00:21:55] Epoch 2/50 - Train Loss: 0.0403 - Val Loss: 0.3262 - Val Acc: 0.9011
Model mode: False
[2024-11-29 00:50:02] Epoch 3/50 - Train Loss: 0.0333 - Val Loss: 0.3275 - Val Acc: 0.9056
Model mode: False
[2024-11-29 01:18:04] Epoch 4/50 - Train Loss: 0.0316 - Val Loss: 0.3318 - Val Acc: 0.9056
Model mode: False
[2024-11-29 01:46:04] Epoch 5/50 - Train Loss: 0.0283 - Val Loss: 0.3343 - Val Acc: 0.9044
Model mode: False
[2024-11-29 02:14:03] Epoch 6/50 - Train Loss: 0.0252 - Val Loss: 0.3341 - Val Acc: 0.9089
Checkpoint saved to checkpoints/best_model.pt
[2024-11-29 02:14:06] Save best_model.pt for Accuracy at epochs 6 
Model mode: False
[2024-11-29 02:42:07] Learning rate updated to: 1.0000000000000002e-07
[2024-11-29 02:42:07] Epoch 7/50 - Train Loss: 0.0243 - Val Loss: 0.3346 - Val Acc: 0.9039
Model mode: False
[2024-11-29 03:10:09] Epoch 8/50 - Train Loss: 0.0227 - Val Loss: 0.3336 - Val Acc: 0.9067
Model mode: False
[2024-11-29 03:38:11] Epoch 9/50 - Train Loss: 0.0232 - Val Loss: 0.3358 - Val Acc: 0.9050
Model mode: False
[2024-11-29 04:06:14] Epoch 10/50 - Train Loss: 0.0211 - Val Loss: 0.3358 - Val Acc: 0.9061
Model mode: False
[2024-11-29 04:34:12] Epoch 11/50 - Train Loss: 0.0229 - Val Loss: 0.3358 - Val Acc: 0.9078
[2024-11-29 04:34:12] Early stopping triggered after epochs 11 
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-29 04:34:33 - INFO - Using device: cuda
[2024-11-29 04:34:33] 
Configuration:
[2024-11-29 04:34:33] Mode: test
[2024-11-29 04:34:33] Modality: text_caption_image_sep
[2024-11-29 04:34:33] Criterion: CrossEntropyLoss
[2024-11-29 04:34:33] 
Model Settings:
[2024-11-29 04:34:33] - Number of classes: 4
[2024-11-29 04:34:33] - Text model: distilbert-base-uncased
[2024-11-29 04:34:33] - Image model: regnet_y_16gf
[2024-11-29 04:34:33] - Hidden sizes: [256]
[2024-11-29 04:34:33] - Use text: True
[2024-11-29 04:34:33] - Use image: True
[2024-11-29 04:34:33] - Use caption: True
[2024-11-29 04:34:33] - Caption mode: CaptionMode.SEPARATE
[2024-11-29 04:34:33] - Use garbage feature: False
[2024-11-29 04:34:33] - Use similarity: False
[2024-11-29 04:34:33] 
Training Settings:
[2024-11-29 04:34:33] - Batch size: 24
[2024-11-29 04:34:33] - Learning rate: 1e-05
[2024-11-29 04:34:33] - Number of epochs: 50
[2024-11-29 04:34:33] - Max sequence length: 300
[2024-11-29 04:34:33] - Dropout rate: 0.3
[2024-11-29 04:34:33] - Early stopping patience: 5
[2024-11-29 04:34:33] - Weight decay: 0.01
[2024-11-29 04:34:33] - Label smoothing: 0.0
[2024-11-29 04:34:33] 
2024-11-29 04:34:34 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:448: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-29 04:34:34] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-29 04:34:34] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-29 04:34:34] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test
Loaded captions: 15431
Loaded captions: 15431
Loaded captions: 15431

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
Model mode: False
test_results['accuracy'] 0.8566015738851647
test_results['precision'] 0.8576740915377425
test_results['recall'] 0.8566015738851647
test_results['f1'] 0.8548174133542956
test_results['loss'] 0.4827774256187771

Confusion Matrix:
--------------------------------------------------
[[ 490  112   18   75]
 [  34 1002   36   13]
 [  17   31  747    4]
 [  54   86   12  700]]
Classification results saved to test_classification_results.json
