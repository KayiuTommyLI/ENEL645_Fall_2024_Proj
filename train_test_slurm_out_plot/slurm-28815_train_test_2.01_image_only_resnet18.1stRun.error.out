[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-22 11:29:13 - INFO - Using device: cuda
[2024-11-22 11:29:13] 
Configuration:
[2024-11-22 11:29:13] Mode: train
[2024-11-22 11:29:13] Modality: image_only
[2024-11-22 11:29:13] 
Model Settings:
[2024-11-22 11:29:13] - Number of classes: 4
[2024-11-22 11:29:13] - Text model: distilbert-base-uncased
[2024-11-22 11:29:13] - Image model: resnet18
[2024-11-22 11:29:13] - Hidden sizes: [256]
[2024-11-22 11:29:13] - Use text: False
[2024-11-22 11:29:13] - Use image: True
[2024-11-22 11:29:13] - Use caption: False
[2024-11-22 11:29:13] - Caption mode: CaptionMode.NONE
[2024-11-22 11:29:13] - Use garbage feature: False
[2024-11-22 11:29:13] - Use similarity: False
[2024-11-22 11:29:13] 
Training Settings:
[2024-11-22 11:29:13] - Batch size: 24
[2024-11-22 11:29:13] - Learning rate: 1e-05
[2024-11-22 11:29:13] - Number of epochs: 50
[2024-11-22 11:29:13] - Max sequence length: 300
[2024-11-22 11:29:13] - Dropout rate: 0.3
[2024-11-22 11:29:13] - Early stopping patience: 5
[2024-11-22 11:29:13] - Weight decay: 0.01
[2024-11-22 11:29:13] - Label smoothing: 0.0
[2024-11-22 11:29:13] 
2024-11-22 11:29:13 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:358: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-22 11:29:13] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-22 11:29:13] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-22 11:29:13] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
[2024-11-22 11:29:15] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-22 11:43:11] Epoch 1/50 - Train Loss: 0.9681 - Val Loss: 0.7746 - Val Acc: 0.6961
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 11:43:13] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-22 11:56:46] Epoch 2/50 - Train Loss: 0.6588 - Val Loss: 0.6983 - Val Acc: 0.7189
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 11:56:49] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-22 12:10:30] Epoch 3/50 - Train Loss: 0.5441 - Val Loss: 0.6495 - Val Acc: 0.7406
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 12:10:32] Save best_model.pt for Loss at epochs 3 
Model mode: False
[2024-11-22 12:24:00] Epoch 4/50 - Train Loss: 0.4421 - Val Loss: 0.6272 - Val Acc: 0.7539
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 12:24:02] Save best_model.pt for Loss at epochs 4 
Model mode: False
[2024-11-22 12:37:33] Epoch 5/50 - Train Loss: 0.3630 - Val Loss: 0.6329 - Val Acc: 0.7628
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 12:37:34] Save best_model.pt for Accuracy at epochs 5 
Model mode: False
[2024-11-22 12:51:00] Epoch 6/50 - Train Loss: 0.2881 - Val Loss: 0.6387 - Val Acc: 0.7633
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 12:51:02] Save best_model.pt for Accuracy at epochs 6 
Model mode: False
[2024-11-22 13:04:26] Epoch 7/50 - Train Loss: 0.2250 - Val Loss: 0.6557 - Val Acc: 0.7672
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 13:04:27] Save best_model.pt for Accuracy at epochs 7 
Model mode: False
[2024-11-22 13:17:53] Epoch 8/50 - Train Loss: 0.1733 - Val Loss: 0.6815 - Val Acc: 0.7606
Model mode: False
[2024-11-22 13:31:20] Epoch 9/50 - Train Loss: 0.1354 - Val Loss: 0.7074 - Val Acc: 0.7728
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 13:31:22] Save best_model.pt for Accuracy at epochs 9 
Model mode: False
[2024-11-22 13:44:49] Learning rate updated to: 1.0000000000000002e-06
[2024-11-22 13:44:49] Epoch 10/50 - Train Loss: 0.1194 - Val Loss: 0.7208 - Val Acc: 0.7689
Model mode: False
[2024-11-22 13:58:20] Epoch 11/50 - Train Loss: 0.0885 - Val Loss: 0.7169 - Val Acc: 0.7728
Model mode: False
[2024-11-22 14:11:54] Epoch 12/50 - Train Loss: 0.0892 - Val Loss: 0.7191 - Val Acc: 0.7689
Model mode: False
[2024-11-22 14:25:22] Epoch 13/50 - Train Loss: 0.0812 - Val Loss: 0.7256 - Val Acc: 0.7706
Model mode: False
[2024-11-22 14:38:54] Epoch 14/50 - Train Loss: 0.0791 - Val Loss: 0.7278 - Val Acc: 0.7761
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 14:38:56] Save best_model.pt for Accuracy at epochs 14 
Model mode: False
[2024-11-22 14:52:27] Epoch 15/50 - Train Loss: 0.0785 - Val Loss: 0.7354 - Val Acc: 0.7722
Model mode: False
[2024-11-22 15:06:01] Learning rate updated to: 1.0000000000000002e-07
[2024-11-22 15:06:01] Epoch 16/50 - Train Loss: 0.0726 - Val Loss: 0.7327 - Val Acc: 0.7689
Model mode: False
[2024-11-22 15:19:35] Epoch 17/50 - Train Loss: 0.0776 - Val Loss: 0.7252 - Val Acc: 0.7800
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 15:19:37] Save best_model.pt for Accuracy at epochs 17 
Model mode: False
[2024-11-22 15:33:13] Epoch 18/50 - Train Loss: 0.0733 - Val Loss: 0.7333 - Val Acc: 0.7711
Model mode: False
[2024-11-22 15:46:50] Epoch 19/50 - Train Loss: 0.0715 - Val Loss: 0.7381 - Val Acc: 0.7733
Model mode: False
[2024-11-22 16:00:28] Epoch 20/50 - Train Loss: 0.0702 - Val Loss: 0.7337 - Val Acc: 0.7672
Model mode: False
[2024-11-22 16:14:06] Epoch 21/50 - Train Loss: 0.0655 - Val Loss: 0.7314 - Val Acc: 0.7767
Model mode: False
[2024-11-22 16:27:33] Learning rate updated to: 1.0000000000000004e-08
[2024-11-22 16:27:33] Epoch 22/50 - Train Loss: 0.0710 - Val Loss: 0.7356 - Val Acc: 0.7733
[2024-11-22 16:27:33] Early stopping triggered after epochs 22 
[2024-11-22 16:27:34] Loading best model from Phase 1
[2024-11-22 16:27:38] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model exists: True
Text model trainable: True
Image model exists: True
Image model trainable: True
Model mode: False
[2024-11-22 16:41:02] Epoch 1/50 - Train Loss: 0.0722 - Val Loss: 0.7337 - Val Acc: 0.7722
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 16:41:04] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-22 16:54:29] Epoch 2/50 - Train Loss: 0.0675 - Val Loss: 0.7367 - Val Acc: 0.7733
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 16:54:31] Save best_model.pt for Accuracy at epochs 2 
Model mode: False
[2024-11-22 17:07:57] Epoch 3/50 - Train Loss: 0.0633 - Val Loss: 0.7469 - Val Acc: 0.7728
Model mode: False
[2024-11-22 17:22:39] Epoch 4/50 - Train Loss: 0.0609 - Val Loss: 0.7418 - Val Acc: 0.7722
Model mode: False
[2024-11-22 17:36:02] Epoch 5/50 - Train Loss: 0.0621 - Val Loss: 0.7517 - Val Acc: 0.7739
Checkpoint saved to checkpoints/best_model.pt
[2024-11-22 17:36:04] Save best_model.pt for Accuracy at epochs 5 
Model mode: False
[2024-11-22 17:49:30] Epoch 6/50 - Train Loss: 0.0556 - Val Loss: 0.7591 - Val Acc: 0.7706
Model mode: False
[2024-11-22 18:02:55] Learning rate updated to: 1.0000000000000002e-07
[2024-11-22 18:02:55] Epoch 7/50 - Train Loss: 0.0536 - Val Loss: 0.7658 - Val Acc: 0.7672
Model mode: False
[2024-11-22 18:16:24] Epoch 8/50 - Train Loss: 0.0546 - Val Loss: 0.7661 - Val Acc: 0.7722
Model mode: False
[2024-11-22 18:29:49] Epoch 9/50 - Train Loss: 0.0537 - Val Loss: 0.7632 - Val Acc: 0.7717
Model mode: False
[2024-11-22 18:43:15] Epoch 10/50 - Train Loss: 0.0549 - Val Loss: 0.7664 - Val Acc: 0.7728
[2024-11-22 18:43:15] Early stopping triggered after epochs 10 
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-22 18:44:35 - INFO - Using device: cpu
[2024-11-22 18:44:35] 
Configuration:
[2024-11-22 18:44:35] Mode: test
[2024-11-22 18:44:35] Modality: image_only
[2024-11-22 18:44:35] 
Model Settings:
[2024-11-22 18:44:35] - Number of classes: 4
[2024-11-22 18:44:35] - Text model: distilbert-base-uncased
[2024-11-22 18:44:35] - Image model: resnet18
[2024-11-22 18:44:35] - Hidden sizes: [256]
[2024-11-22 18:44:35] - Use text: False
[2024-11-22 18:44:35] - Use image: True
[2024-11-22 18:44:35] - Use caption: False
[2024-11-22 18:44:35] - Caption mode: CaptionMode.NONE
[2024-11-22 18:44:35] - Use garbage feature: False
[2024-11-22 18:44:35] - Use similarity: False
[2024-11-22 18:44:35] 
Training Settings:
[2024-11-22 18:44:35] - Batch size: 24
[2024-11-22 18:44:35] - Learning rate: 1e-05
[2024-11-22 18:44:35] - Number of epochs: 50
[2024-11-22 18:44:35] - Max sequence length: 300
[2024-11-22 18:44:35] - Dropout rate: 0.3
[2024-11-22 18:44:35] - Early stopping patience: 5
[2024-11-22 18:44:35] - Weight decay: 0.01
[2024-11-22 18:44:35] - Label smoothing: 0.0
[2024-11-22 18:44:35] 
2024-11-22 18:44:35 - INFO - Initialized distilbert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:437: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-22 18:44:35] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-22 18:44:35] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-22 18:44:35] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
Traceback (most recent call last):
  File "/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py", line 471, in <module>
    main()
  File "/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py", line 437, in main
    checkpoint = torch.load('checkpoints/best_model.pt')
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 1368, in load
    return _load(
           ^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 1856, in _load
    result = unpickler.load()
             ^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 1820, in persistent_load
    typed_storage = load_tensor(
                    ^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 1792, in load_tensor
    wrap_storage=restore_location(storage, location),
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 601, in default_restore_location
    result = fn(storage, location)
             ^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 539, in _deserialize
    device = _validate_device(location, backend_name)
             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/serialization.py", line 508, in _validate_device
    raise RuntimeError(
RuntimeError: Attempting to deserialize object on a CUDA device but torch.cuda.is_available() is False. If you are running on a CPU-only machine, please use torch.load with map_location=torch.device('cpu') to map your storages to the CPU.
