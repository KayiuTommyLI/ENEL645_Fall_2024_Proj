[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-30 02:47:04 - INFO - Using device: cuda
[2024-11-30 02:47:04] 
Configuration:
[2024-11-30 02:47:04] Mode: train
[2024-11-30 02:47:04] Modality: text_caption_image_concat
[2024-11-30 02:47:04] Criterion: CrossEntropyLoss
[2024-11-30 02:47:04] 
Model Settings:
[2024-11-30 02:47:04] - Number of classes: 4
[2024-11-30 02:47:04] - Text model: bert-base-uncased
[2024-11-30 02:47:04] - Image model: regnet_y_32_linear
[2024-11-30 02:47:04] - Hidden sizes: [256]
[2024-11-30 02:47:04] - Use text: True
[2024-11-30 02:47:04] - Use image: True
[2024-11-30 02:47:04] - Use caption: True
[2024-11-30 02:47:04] - Caption mode: CaptionMode.CONCATENATE
[2024-11-30 02:47:04] - Use garbage feature: False
[2024-11-30 02:47:04] - Use similarity: False
[2024-11-30 02:47:04] 
Training Settings:
[2024-11-30 02:47:04] - Batch size: 24
[2024-11-30 02:47:04] - Learning rate: 1e-05
[2024-11-30 02:47:04] - Number of epochs: 50
[2024-11-30 02:47:04] - Max sequence length: 300
[2024-11-30 02:47:04] - Dropout rate: 0.3
[2024-11-30 02:47:04] - Early stopping patience: 5
[2024-11-30 02:47:04] - Weight decay: 0.01
[2024-11-30 02:47:04] - Label smoothing: 0.0
[2024-11-30 02:47:04] 
2024-11-30 02:47:04 - INFO - Initialized bert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:369: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-30 02:47:04] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-30 02:47:04] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-30 02:47:04] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test
Loaded captions: 15431
Loaded captions: 15431
Loaded captions: 15431

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
[2024-11-30 02:47:34] Phase 1: Training classifier with frozen feature extractors
Model mode: False
[2024-11-30 03:19:08] Epoch 1/50 - Train Loss: 0.4774 - Val Loss: 0.3425 - Val Acc: 0.8811
Checkpoint saved to checkpoints/best_model.pt
[2024-11-30 03:19:11] Save best_model.pt for Loss at epochs 1 
Model mode: False
[2024-11-30 03:50:43] Epoch 2/50 - Train Loss: 0.2061 - Val Loss: 0.3009 - Val Acc: 0.8978
Checkpoint saved to checkpoints/best_model.pt
[2024-11-30 03:50:47] Save best_model.pt for Loss at epochs 2 
Model mode: False
[2024-11-30 04:22:16] Epoch 3/50 - Train Loss: 0.1267 - Val Loss: 0.3194 - Val Acc: 0.9000
Checkpoint saved to checkpoints/best_model.pt
[2024-11-30 04:22:19] Save best_model.pt for Accuracy at epochs 3 
Model mode: False
[2024-11-30 04:53:48] Epoch 4/50 - Train Loss: 0.0829 - Val Loss: 0.3369 - Val Acc: 0.9056
Checkpoint saved to checkpoints/best_model.pt
[2024-11-30 04:53:51] Save best_model.pt for Accuracy at epochs 4 
Model mode: False
[2024-11-30 05:25:20] Epoch 5/50 - Train Loss: 0.0583 - Val Loss: 0.3422 - Val Acc: 0.9000
Model mode: False
[2024-11-30 05:56:50] Epoch 6/50 - Train Loss: 0.0405 - Val Loss: 0.3674 - Val Acc: 0.9022
Model mode: False
[2024-11-30 06:28:16] Epoch 7/50 - Train Loss: 0.0365 - Val Loss: 0.3838 - Val Acc: 0.9056
Model mode: False
[2024-11-30 06:59:45] Learning rate updated to: 1.0000000000000002e-06
[2024-11-30 06:59:45] Epoch 8/50 - Train Loss: 0.0293 - Val Loss: 0.4050 - Val Acc: 0.9061
Checkpoint saved to checkpoints/best_model.pt
[2024-11-30 06:59:48] Save best_model.pt for Accuracy at epochs 8 
Model mode: False
[2024-11-30 07:31:17] Epoch 9/50 - Train Loss: 0.0194 - Val Loss: 0.4028 - Val Acc: 0.9078
Checkpoint saved to checkpoints/best_model.pt
[2024-11-30 07:31:20] Save best_model.pt for Accuracy at epochs 9 
Model mode: False
[2024-11-30 08:02:49] Epoch 10/50 - Train Loss: 0.0196 - Val Loss: 0.3980 - Val Acc: 0.9078
Model mode: False
[2024-11-30 08:34:18] Epoch 11/50 - Train Loss: 0.0140 - Val Loss: 0.4018 - Val Acc: 0.9056
Model mode: False
[2024-11-30 09:05:47] Epoch 12/50 - Train Loss: 0.0159 - Val Loss: 0.4033 - Val Acc: 0.9028
Model mode: False
[2024-11-30 09:37:15] Epoch 13/50 - Train Loss: 0.0133 - Val Loss: 0.4249 - Val Acc: 0.9033
Model mode: False
[2024-11-30 10:08:46] Learning rate updated to: 1.0000000000000002e-07
[2024-11-30 10:08:46] Epoch 14/50 - Train Loss: 0.0125 - Val Loss: 0.4149 - Val Acc: 0.9072
[2024-11-30 10:08:46] Early stopping triggered after epochs 14 
[2024-11-30 10:08:46] Loading best model from Phase 1
[2024-11-30 10:08:57] Phase 2: Fine-tuning feature extractors

Feature Extractor States:
Text model exists: True
Text model trainable: True
Image model exists: True
Image model trainable: True
Traceback (most recent call last):
  File "/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py", line 482, in <module>
    main()
  File "/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py", line 399, in main
    fine_tune_history = trainer.train(
                        ^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/training/trainer.py", line 174, in train
    train_loss = self.train_epoch(train_loader)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/training/trainer.py", line 66, in train_epoch
    outputs = self.model(
              ^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/models/multimodal.py", line 152, in forward
    image_features = self.image_processor(images)
                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/models/feature_extractors.py", line 215, in forward
    features = self.feature_extractor(x)
               ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/container.py", line 250, in forward
    input = module(input)
            ^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/jeffrey.wong1/software/miniforge3/envs/pytorch/lib/python3.12/site-packages/torchvision/models/regnet.py", line 147, in forward
    x = x + self.f(x)
        ~~^~~~~~~~~~~
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 26.00 MiB. GPU 0 has a total capacity of 14.58 GiB of which 7.56 MiB is free. Including non-PyTorch memory, this process has 14.57 GiB memory in use. Of the allocated memory 13.61 GiB is allocated by PyTorch, and 843.71 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
[nltk_data] Downloading package wordnet to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package wordnet is already up-to-date!
[nltk_data] Downloading package stopwords to
[nltk_data]     /home/jeffrey.wong1/nltk_data...
[nltk_data]   Package stopwords is already up-to-date!
2024-11-30 10:09:18 - INFO - Using device: cuda
[2024-11-30 10:09:18] 
Configuration:
[2024-11-30 10:09:18] Mode: test
[2024-11-30 10:09:18] Modality: text_caption_image_concat
[2024-11-30 10:09:18] Criterion: CrossEntropyLoss
[2024-11-30 10:09:18] 
Model Settings:
[2024-11-30 10:09:18] - Number of classes: 4
[2024-11-30 10:09:18] - Text model: bert-base-uncased
[2024-11-30 10:09:18] - Image model: regnet_y_32_linear
[2024-11-30 10:09:18] - Hidden sizes: [256]
[2024-11-30 10:09:18] - Use text: True
[2024-11-30 10:09:18] - Use image: True
[2024-11-30 10:09:18] - Use caption: True
[2024-11-30 10:09:18] - Caption mode: CaptionMode.CONCATENATE
[2024-11-30 10:09:18] - Use garbage feature: False
[2024-11-30 10:09:18] - Use similarity: False
[2024-11-30 10:09:18] 
Training Settings:
[2024-11-30 10:09:18] - Batch size: 24
[2024-11-30 10:09:18] - Learning rate: 1e-05
[2024-11-30 10:09:18] - Number of epochs: 50
[2024-11-30 10:09:18] - Max sequence length: 300
[2024-11-30 10:09:18] - Dropout rate: 0.3
[2024-11-30 10:09:18] - Early stopping patience: 5
[2024-11-30 10:09:18] - Weight decay: 0.01
[2024-11-30 10:09:18] - Label smoothing: 0.0
[2024-11-30 10:09:18] 
2024-11-30 10:09:18 - INFO - Initialized bert-base-uncased tokenizer
/home/jeffrey.wong1/github_repo/ENGL645_Fall_2024_Proj/Project-Benchmark/main.py:448: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load('checkpoints/best_model.pt')
[2024-11-30 10:09:18] Loading Train data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Train
[2024-11-30 10:09:18] Loading Val data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Val
[2024-11-30 10:09:18] Loading Test data from: /work/TALC/enel645_2024f/garbage_data/CVPR_2024_dataset_Test
Loaded captions: 15431
Loaded captions: 15431
Loaded captions: 15431

Train Dataset Statistics:
Size: 10200
Class distribution: {np.int64(0): np.int64(2111), np.int64(1): np.int64(4355), np.int64(2): np.int64(1991), np.int64(3): np.int64(1743)}

Val Dataset Statistics:
Size: 1800
Class distribution: {np.int64(0): np.int64(372), np.int64(1): np.int64(768), np.int64(2): np.int64(352), np.int64(3): np.int64(308)}

Test Dataset Statistics:
Size: 3431
Class distribution: {np.int64(0): np.int64(695), np.int64(1): np.int64(1085), np.int64(2): np.int64(799), np.int64(3): np.int64(852)}
Model mode: False
test_results['accuracy'] 0.8708831244535121
test_results['precision'] 0.8716782622352944
test_results['recall'] 0.8708831244535121
test_results['f1'] 0.869867792167244
test_results['loss'] 0.5236380137828784

Confusion Matrix:
--------------------------------------------------
[[ 526   92   17   60]
 [  43 1003   28   11]
 [  13   25  758    3]
 [  62   78   11  701]]
Classification results saved to test_classification_results.json
